# In its current state, this code will not work as it requires other scripts to populate the parties input files.
# This code simply serves as an example of code in MP-SPDZ. It is unoptimized, and not modular. As such, it should
# not serve as an example of what 'good' MP-SPDZ code should look like, just what it can look like.

from Compiler import mpc_math
from Compiler import ml
# from Compiler.library import public_input()
import sys

feat = 10
n = 8

learning_rate = 0.001

y = sfix.Array(feat)
pred = sfix.Array(feat)
w_delta = sfix.Matrix(1, n)

X = sfix.Matrix(n, feat)

# update weights
@for_range_opt(n)
def _(k):
    w_delta[0] = w_delta + learning_rate * (y - pred) * X[k]

print_ln("%s", w_delta)